/**
 * generated by Xtext 2.12.0
 */
package fr.uha.ensisa.project.pan_chabalier.tse.tSE.impl;

import fr.uha.ensisa.project.pan_chabalier.tse.tSE.CoordinatesStatesTransition;
import fr.uha.ensisa.project.pan_chabalier.tse.tSE.TSEPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Coordinates States Transition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.uha.ensisa.project.pan_chabalier.tse.tSE.impl.CoordinatesStatesTransitionImpl#getStateTransition <em>State Transition</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CoordinatesStatesTransitionImpl extends MinimalEObjectImpl.Container implements CoordinatesStatesTransition
{
  /**
   * The default value of the '{@link #getStateTransition() <em>State Transition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStateTransition()
   * @generated
   * @ordered
   */
  protected static final String STATE_TRANSITION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStateTransition() <em>State Transition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStateTransition()
   * @generated
   * @ordered
   */
  protected String stateTransition = STATE_TRANSITION_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CoordinatesStatesTransitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TSEPackage.Literals.COORDINATES_STATES_TRANSITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getStateTransition()
  {
    return stateTransition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStateTransition(String newStateTransition)
  {
    String oldStateTransition = stateTransition;
    stateTransition = newStateTransition;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TSEPackage.COORDINATES_STATES_TRANSITION__STATE_TRANSITION, oldStateTransition, stateTransition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TSEPackage.COORDINATES_STATES_TRANSITION__STATE_TRANSITION:
        return getStateTransition();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TSEPackage.COORDINATES_STATES_TRANSITION__STATE_TRANSITION:
        setStateTransition((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TSEPackage.COORDINATES_STATES_TRANSITION__STATE_TRANSITION:
        setStateTransition(STATE_TRANSITION_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TSEPackage.COORDINATES_STATES_TRANSITION__STATE_TRANSITION:
        return STATE_TRANSITION_EDEFAULT == null ? stateTransition != null : !STATE_TRANSITION_EDEFAULT.equals(stateTransition);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (stateTransition: ");
    result.append(stateTransition);
    result.append(')');
    return result.toString();
  }

} //CoordinatesStatesTransitionImpl
