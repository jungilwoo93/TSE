/**
 * generated by Xtext 2.12.0
 */
package fr.uha.ensisa.project.pan_chabalier.tse.tSE.impl;

import fr.uha.ensisa.project.pan_chabalier.tse.tSE.StatesProperties;
import fr.uha.ensisa.project.pan_chabalier.tse.tSE.TSEPackage;

import java.util.Collection;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>States Properties</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.uha.ensisa.project.pan_chabalier.tse.tSE.impl.StatesPropertiesImpl#getColor <em>Color</em>}</li>
 *   <li>{@link fr.uha.ensisa.project.pan_chabalier.tse.tSE.impl.StatesPropertiesImpl#getThickness <em>Thickness</em>}</li>
 *   <li>{@link fr.uha.ensisa.project.pan_chabalier.tse.tSE.impl.StatesPropertiesImpl#getPosition <em>Position</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StatesPropertiesImpl extends MinimalEObjectImpl.Container implements StatesProperties
{
  /**
   * The cached value of the '{@link #getColor() <em>Color</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColor()
   * @generated
   * @ordered
   */
  protected EList<String> color;

  /**
   * The cached value of the '{@link #getThickness() <em>Thickness</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThickness()
   * @generated
   * @ordered
   */
  protected EList<String> thickness;

  /**
   * The cached value of the '{@link #getPosition() <em>Position</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPosition()
   * @generated
   * @ordered
   */
  protected EList<String> position;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StatesPropertiesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TSEPackage.Literals.STATES_PROPERTIES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getColor()
  {
    if (color == null)
    {
      color = new EDataTypeEList<String>(String.class, this, TSEPackage.STATES_PROPERTIES__COLOR);
    }
    return color;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getThickness()
  {
    if (thickness == null)
    {
      thickness = new EDataTypeEList<String>(String.class, this, TSEPackage.STATES_PROPERTIES__THICKNESS);
    }
    return thickness;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getPosition()
  {
    if (position == null)
    {
      position = new EDataTypeEList<String>(String.class, this, TSEPackage.STATES_PROPERTIES__POSITION);
    }
    return position;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TSEPackage.STATES_PROPERTIES__COLOR:
        return getColor();
      case TSEPackage.STATES_PROPERTIES__THICKNESS:
        return getThickness();
      case TSEPackage.STATES_PROPERTIES__POSITION:
        return getPosition();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TSEPackage.STATES_PROPERTIES__COLOR:
        getColor().clear();
        getColor().addAll((Collection<? extends String>)newValue);
        return;
      case TSEPackage.STATES_PROPERTIES__THICKNESS:
        getThickness().clear();
        getThickness().addAll((Collection<? extends String>)newValue);
        return;
      case TSEPackage.STATES_PROPERTIES__POSITION:
        getPosition().clear();
        getPosition().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TSEPackage.STATES_PROPERTIES__COLOR:
        getColor().clear();
        return;
      case TSEPackage.STATES_PROPERTIES__THICKNESS:
        getThickness().clear();
        return;
      case TSEPackage.STATES_PROPERTIES__POSITION:
        getPosition().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TSEPackage.STATES_PROPERTIES__COLOR:
        return color != null && !color.isEmpty();
      case TSEPackage.STATES_PROPERTIES__THICKNESS:
        return thickness != null && !thickness.isEmpty();
      case TSEPackage.STATES_PROPERTIES__POSITION:
        return position != null && !position.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (color: ");
    result.append(color);
    result.append(", thickness: ");
    result.append(thickness);
    result.append(", position: ");
    result.append(position);
    result.append(')');
    return result.toString();
  }

} //StatesPropertiesImpl
