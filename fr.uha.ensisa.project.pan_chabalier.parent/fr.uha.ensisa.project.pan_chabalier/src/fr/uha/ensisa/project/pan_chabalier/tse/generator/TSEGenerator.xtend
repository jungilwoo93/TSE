/*
 * generated by Xtext 2.12.0
 */
package fr.uha.ensisa.project.pan_chabalier.tse.generator

import fr.uha.ensisa.project.pan_chabalier.tse.tSE.Element
import fr.uha.ensisa.project.pan_chabalier.tse.tSE.Model
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class TSEGenerator extends AbstractGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		for (m : resource.allContents.toIterable.filter(Model)) {
			fsa.generateFile("tmpJavaCode.java", m.compile());
		}
	}
	
	

	def compile(Model model)'''
		import java.util.HashMap
		import fr.uha.ensisa.project.pan_chabalier.tse.tSE.StatesProperties
		import org.eclipse.emf.common.util.EList
		
		package fr.uha.ensisa.project.pan_chabalier.tmp;
			
		    public class tmpJavaCode {
		    	
		    	private HashMap<String,EList<StatesProperties>> states = new HashMap<String,EList<StatesProperties>>();
		    	
		    	public tmpJavaCode(){
		    		«FOR e:model.elements»
		    		    «e.compile»
		    		«ENDFOR»
		    	}
		    }
		'''
		
	def compile(Element e)'''
		«FOR s:e.states»
			states.put(«s.name»,«s.statesPropriety»);
		«ENDFOR»
	'''

//	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
////		fsa.generateFile('greetings.txt', 'People to greet: ' + 
////			resource.allContents
////				.filter(Greeting)
////				.map[name]
////				.join(', '))
//	}
}
