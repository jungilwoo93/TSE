/*
 * generated by Xtext 2.12.0
 */
package fr.uha.ensisa.project.pan_chabalier.tse.generator

import fr.uha.ensisa.project.pan_chabalier.tse.tSE.Element
import fr.uha.ensisa.project.pan_chabalier.tse.tSE.Model
import fr.uha.ensisa.project.pan_chabalier.tse.tSE.StatesProperties
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class TSEGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		for (m : resource.allContents.toIterable.filter(Model)) {
			fsa.generateFile("fr/uha/ensisa/project/pan_chabalier/tmp/tmpJavaCode.java", m.compile());
		}

	}

	def compile(Model model) '''
package fr.uha.ensisa.project.pan_chabalier.tmp;

import java.awt.Color;
import java.awt.Point;
import java.util.HashMap;

public class tmpJavaCode {

	private HashMap<String,HashMap<String,Object>> states = new HashMap<String,HashMap<String,Object>>();
	private HashMap<String,HashMap<String,Object>> transitions = new HashMap<String,HashMap<String,Object>>();

	public tmpJavaCode() {
		«FOR e : model.elements»
			«e.compile»
		«ENDFOR»
	}
	
	public HashMap<String, HashMap<String,Object>> getStates(){
		return this.states;
	}
	
	public HashMap<String,Object> getStatesProperties(String stateName){
		return this.states.get(stateName);
	}
	
	public static void main(String[] args) {
		tmpJavaCode tmp = new tmpJavaCode();
		for(HashMap<String,Object> s : tmp.getStates().values()) {
			System.out.println(s.toString());
		}
	}
}
	'''

	def compile(Element e) '''
		«FOR s : e.states»
			states.put("«s.name»", new HashMap<String,Object>(){{«FOR p:s.statesPropriety» put(«p.compile»);«ENDFOR»}});
		«ENDFOR»
	'''

	def compile(StatesProperties p) '''«IF p.position!==null»"position", new Point(«p.position»)«ENDIF»«IF p.color !== null»"color", Color.«p.color»«ENDIF»«IF p.thickness!==null»"thickness", new Float(«p.thickness»)«ENDIF»'''
}
