/*
 * generated by Xtext 2.12.0
 */
grammar InternalTSE;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.uha.ensisa.project.pan_chabalier.tse.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.uha.ensisa.project.pan_chabalier.tse.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.uha.ensisa.project.pan_chabalier.tse.services.TSEGrammarAccess;

}
@parser::members {
	private TSEGrammarAccess grammarAccess;

	public void setGrammarAccess(TSEGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getElementsAssignment()); }
		(rule__Model__ElementsAssignment)*
		{ after(grammarAccess.getModelAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleState
entryRuleState
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateAccess().getGroup()); }
		(rule__State__Group__0)
		{ after(grammarAccess.getStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatesProperties
entryRuleStatesProperties
:
{ before(grammarAccess.getStatesPropertiesRule()); }
	 ruleStatesProperties
{ after(grammarAccess.getStatesPropertiesRule()); } 
	 EOF 
;

// Rule StatesProperties
ruleStatesProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatesPropertiesAccess().getAlternatives()); }
		(rule__StatesProperties__Alternatives)
		{ after(grammarAccess.getStatesPropertiesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransition
entryRuleTransition
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransitionAccess().getAlternatives()); }
		(rule__Transition__Alternatives)
		{ after(grammarAccess.getTransitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabel
entryRuleLabel
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelAccess().getGroup()); }
		(rule__Label__Group__0)
		{ after(grammarAccess.getLabelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCoordinatesStatesTransition
entryRuleCoordinatesStatesTransition
:
{ before(grammarAccess.getCoordinatesStatesTransitionRule()); }
	 ruleCoordinatesStatesTransition
{ after(grammarAccess.getCoordinatesStatesTransitionRule()); } 
	 EOF 
;

// Rule CoordinatesStatesTransition
ruleCoordinatesStatesTransition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCoordinatesStatesTransitionAccess().getStateTransitionAssignment()); }
		(rule__CoordinatesStatesTransition__StateTransitionAssignment)
		{ after(grammarAccess.getCoordinatesStatesTransitionAccess().getStateTransitionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletransitionProperties
entryRuletransitionProperties
:
{ before(grammarAccess.getTransitionPropertiesRule()); }
	 ruletransitionProperties
{ after(grammarAccess.getTransitionPropertiesRule()); } 
	 EOF 
;

// Rule transitionProperties
ruletransitionProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransitionPropertiesAccess().getAlternatives()); }
		(rule__TransitionProperties__Alternatives)
		{ after(grammarAccess.getTransitionPropertiesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getStatesAssignment_0()); }
		(rule__Element__StatesAssignment_0)
		{ after(grammarAccess.getElementAccess().getStatesAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getTransitionsAssignment_1()); }
		(rule__Element__TransitionsAssignment_1)
		{ after(grammarAccess.getElementAccess().getTransitionsAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesProperties__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatesPropertiesAccess().getGroup_0()); }
		(rule__StatesProperties__Group_0__0)
		{ after(grammarAccess.getStatesPropertiesAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatesPropertiesAccess().getGroup_1()); }
		(rule__StatesProperties__Group_1__0)
		{ after(grammarAccess.getStatesPropertiesAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatesPropertiesAccess().getGroup_2()); }
		(rule__StatesProperties__Group_2__0)
		{ after(grammarAccess.getStatesPropertiesAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatesPropertiesAccess().getGroup_3()); }
		(rule__StatesProperties__Group_3__0)
		{ after(grammarAccess.getStatesPropertiesAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getGroup_0()); }
		(rule__Transition__Group_0__0)
		{ after(grammarAccess.getTransitionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransitionAccess().getGroup_1()); }
		(rule__Transition__Group_1__0)
		{ after(grammarAccess.getTransitionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionProperties__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionPropertiesAccess().getGroup_0()); }
		(rule__TransitionProperties__Group_0__0)
		{ after(grammarAccess.getTransitionPropertiesAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransitionPropertiesAccess().getGroup_1()); }
		(rule__TransitionProperties__Group_1__0)
		{ after(grammarAccess.getTransitionPropertiesAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTransitionPropertiesAccess().getGroup_2()); }
		(rule__TransitionProperties__Group_2__0)
		{ after(grammarAccess.getTransitionPropertiesAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getStateKeyword_0()); }
	'state'
	{ after(grammarAccess.getStateAccess().getStateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getNameAssignment_1()); }
	(rule__State__NameAssignment_1)
	{ after(grammarAccess.getStateAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getStateAccess().getStatesProprietyAssignment_2()); }
		(rule__State__StatesProprietyAssignment_2)
		{ after(grammarAccess.getStateAccess().getStatesProprietyAssignment_2()); }
	)
	(
		{ before(grammarAccess.getStateAccess().getStatesProprietyAssignment_2()); }
		(rule__State__StatesProprietyAssignment_2)*
		{ after(grammarAccess.getStateAccess().getStatesProprietyAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatesProperties__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatesProperties__Group_0__0__Impl
	rule__StatesProperties__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesProperties__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatesPropertiesAccess().getColorKeyword_0_0()); }
	'color'
	{ after(grammarAccess.getStatesPropertiesAccess().getColorKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesProperties__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatesProperties__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesProperties__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatesPropertiesAccess().getColorAssignment_0_1()); }
	(rule__StatesProperties__ColorAssignment_0_1)
	{ after(grammarAccess.getStatesPropertiesAccess().getColorAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatesProperties__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatesProperties__Group_1__0__Impl
	rule__StatesProperties__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesProperties__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatesPropertiesAccess().getThicknessKeyword_1_0()); }
	'thickness'
	{ after(grammarAccess.getStatesPropertiesAccess().getThicknessKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesProperties__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatesProperties__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesProperties__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatesPropertiesAccess().getThicknessAssignment_1_1()); }
	(rule__StatesProperties__ThicknessAssignment_1_1)
	{ after(grammarAccess.getStatesPropertiesAccess().getThicknessAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatesProperties__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatesProperties__Group_2__0__Impl
	rule__StatesProperties__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesProperties__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatesPropertiesAccess().getPositionKeyword_2_0()); }
	'position'
	{ after(grammarAccess.getStatesPropertiesAccess().getPositionKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesProperties__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatesProperties__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesProperties__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatesPropertiesAccess().getPositionAssignment_2_1()); }
	(rule__StatesProperties__PositionAssignment_2_1)
	{ after(grammarAccess.getStatesPropertiesAccess().getPositionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatesProperties__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatesProperties__Group_3__0__Impl
	rule__StatesProperties__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesProperties__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatesPropertiesAccess().getDEFAULTTerminalRuleCall_3_0()); }
	RULE_DEFAULT
	{ after(grammarAccess.getStatesPropertiesAccess().getDEFAULTTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesProperties__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatesProperties__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesProperties__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatesPropertiesAccess().getPositionAssignment_3_1()); }
	(rule__StatesProperties__PositionAssignment_3_1)
	{ after(grammarAccess.getStatesPropertiesAccess().getPositionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_0__0__Impl
	rule__Transition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getTransitionKeyword_0_0()); }
	'transition'
	{ after(grammarAccess.getTransitionAccess().getTransitionKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_0__1__Impl
	rule__Transition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getStartAssignment_0_1()); }
	(rule__Transition__StartAssignment_0_1)
	{ after(grammarAccess.getTransitionAccess().getStartAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_0__2__Impl
	rule__Transition__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_0_2()); }
	'->'
	{ after(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_0__3__Impl
	rule__Transition__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getEndAssignment_0_3()); }
	(rule__Transition__EndAssignment_0_3)
	{ after(grammarAccess.getTransitionAccess().getEndAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_0__4__Impl
	rule__Transition__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getProprietyTransitionAssignment_0_4()); }
	(rule__Transition__ProprietyTransitionAssignment_0_4)*
	{ after(grammarAccess.getTransitionAccess().getProprietyTransitionAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getLabelAssignment_0_5()); }
	(rule__Transition__LabelAssignment_0_5)?
	{ after(grammarAccess.getTransitionAccess().getLabelAssignment_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_1__0__Impl
	rule__Transition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getInitialTransitionKeyword_1_0()); }
	'initialTransition'
	{ after(grammarAccess.getTransitionAccess().getInitialTransitionKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_1__1__Impl
	rule__Transition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getInitAssignment_1_1()); }
	(rule__Transition__InitAssignment_1_1)
	{ after(grammarAccess.getTransitionAccess().getInitAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getCOORDINATESTerminalRuleCall_1_2()); }
	RULE_COORDINATES
	{ after(grammarAccess.getTransitionAccess().getCOORDINATESTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__0__Impl
	rule__Label__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getLabelKeyword_0()); }
	'label'
	{ after(grammarAccess.getLabelAccess().getLabelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__1__Impl
	rule__Label__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getTextAssignment_1()); }
	(rule__Label__TextAssignment_1)
	{ after(grammarAccess.getLabelAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getPositionAssignment_2()); }
	(rule__Label__PositionAssignment_2)
	{ after(grammarAccess.getLabelAccess().getPositionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionProperties__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionProperties__Group_0__0__Impl
	rule__TransitionProperties__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionProperties__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionPropertiesAccess().getColorKeyword_0_0()); }
	'color'
	{ after(grammarAccess.getTransitionPropertiesAccess().getColorKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionProperties__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionProperties__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionProperties__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionPropertiesAccess().getColorAssignment_0_1()); }
	(rule__TransitionProperties__ColorAssignment_0_1)
	{ after(grammarAccess.getTransitionPropertiesAccess().getColorAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionProperties__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionProperties__Group_1__0__Impl
	rule__TransitionProperties__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionProperties__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionPropertiesAccess().getThicknessKeyword_1_0()); }
	'thickness'
	{ after(grammarAccess.getTransitionPropertiesAccess().getThicknessKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionProperties__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionProperties__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionProperties__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionPropertiesAccess().getThicknessAssignment_1_1()); }
	(rule__TransitionProperties__ThicknessAssignment_1_1)
	{ after(grammarAccess.getTransitionPropertiesAccess().getThicknessAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionProperties__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionProperties__Group_2__0__Impl
	rule__TransitionProperties__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionProperties__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionPropertiesAccess().getCurvatureKeyword_2_0()); }
	'curvature'
	{ after(grammarAccess.getTransitionPropertiesAccess().getCurvatureKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionProperties__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransitionProperties__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionProperties__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionPropertiesAccess().getCurveAssignment_2_1()); }
	(rule__TransitionProperties__CurveAssignment_2_1)
	{ after(grammarAccess.getTransitionPropertiesAccess().getCurveAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsElementParserRuleCall_0()); }
		ruleElement
		{ after(grammarAccess.getModelAccess().getElementsElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__StatesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getStatesStateParserRuleCall_0_0()); }
		ruleState
		{ after(grammarAccess.getElementAccess().getStatesStateParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__TransitionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getTransitionsTransitionParserRuleCall_1_0()); }
		ruleTransition
		{ after(grammarAccess.getElementAccess().getTransitionsTransitionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__StatesProprietyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getStatesProprietyStatesPropertiesParserRuleCall_2_0()); }
		ruleStatesProperties
		{ after(grammarAccess.getStateAccess().getStatesProprietyStatesPropertiesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesProperties__ColorAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatesPropertiesAccess().getColorCOLORTerminalRuleCall_0_1_0()); }
		RULE_COLOR
		{ after(grammarAccess.getStatesPropertiesAccess().getColorCOLORTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesProperties__ThicknessAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatesPropertiesAccess().getThicknessFLOATTerminalRuleCall_1_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getStatesPropertiesAccess().getThicknessFLOATTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesProperties__PositionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatesPropertiesAccess().getPositionCOORDINATESTerminalRuleCall_2_1_0()); }
		RULE_COORDINATES
		{ after(grammarAccess.getStatesPropertiesAccess().getPositionCOORDINATESTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesProperties__PositionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatesPropertiesAccess().getPositionCOORDINATESTerminalRuleCall_3_1_0()); }
		RULE_COORDINATES
		{ after(grammarAccess.getStatesPropertiesAccess().getPositionCOORDINATESTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__StartAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getStartCoordinatesStatesTransitionParserRuleCall_0_1_0()); }
		ruleCoordinatesStatesTransition
		{ after(grammarAccess.getTransitionAccess().getStartCoordinatesStatesTransitionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EndAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getEndCoordinatesStatesTransitionParserRuleCall_0_3_0()); }
		ruleCoordinatesStatesTransition
		{ after(grammarAccess.getTransitionAccess().getEndCoordinatesStatesTransitionParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ProprietyTransitionAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getProprietyTransitionTransitionPropertiesParserRuleCall_0_4_0()); }
		ruletransitionProperties
		{ after(grammarAccess.getTransitionAccess().getProprietyTransitionTransitionPropertiesParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__LabelAssignment_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getLabelLabelParserRuleCall_0_5_0()); }
		ruleLabel
		{ after(grammarAccess.getTransitionAccess().getLabelLabelParserRuleCall_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__InitAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getInitIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTransitionAccess().getInitIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getTextSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getLabelAccess().getTextSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__PositionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getPositionCOORDINATESTerminalRuleCall_2_0()); }
		RULE_COORDINATES
		{ after(grammarAccess.getLabelAccess().getPositionCOORDINATESTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatesStatesTransition__StateTransitionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinatesStatesTransitionAccess().getStateTransitionIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getCoordinatesStatesTransitionAccess().getStateTransitionIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionProperties__ColorAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionPropertiesAccess().getColorCOLORTerminalRuleCall_0_1_0()); }
		RULE_COLOR
		{ after(grammarAccess.getTransitionPropertiesAccess().getColorCOLORTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionProperties__ThicknessAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionPropertiesAccess().getThicknessFLOATTerminalRuleCall_1_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getTransitionPropertiesAccess().getThicknessFLOATTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionProperties__CurveAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionPropertiesAccess().getCurveFLOATTerminalRuleCall_2_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getTransitionPropertiesAccess().getCurveFLOATTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DEFAULT : ('DEFAULT'|'default');

RULE_COLOR : ('WHITE'|'BLACK'|'BLUE'|'CYAN'|'DARK_GRAY'|'GRAY'|'LIGHT_GRAY'|'GREEN'|'MAGENTA'|'ORANGE'|'PINK'|'RED'|'YELLOW');

RULE_FLOAT : RULE_INT '.' RULE_INT;

RULE_COORDINATES : RULE_INT ',' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
